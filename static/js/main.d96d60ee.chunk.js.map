{"version":3,"sources":["component/Navbar.js","component/Home.js","component/Panel.js","component/Contact.js","component/Form.js","component/Hooks.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","style","padding","to","Home","backgroundColor","height","Panel","call","e","target","checked","parentElement","border","boxShadow","fontSize","marginBottom","src","type","onChange","this","bind","align","Component","Contact","Form","props","state","title","body","setData","onSubmit","setState","name","value","preventDefault","post","fetch","method","headers","JSON","stringify","then","res","json","data","console","log","App","useState","count","setCount","count1","setCount1","useEffect","onClick","items","text","done","check1","exact","path","component","render","txt","Hooks","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d96d60ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nvar Navbar = () =>{\n\treturn(\n\t\t<div className=\"container-fluid\">\n\t\t<div className=\"row\">\n\t\t<div className=\"col-sm-12 col-xs-12 col-md-12\" style={{padding:0}}>  \n\t\t<nav className=\"navbar navbar-expand-sm bg-light navbar-light\">\n\t\t  <ul className=\"navbar-nav\">\n\t\t    <li className=\"nav-item \">\n\t\t      <Link className=\"nav-link\" to=\"/\">Home</Link> \n\t\t    </li>\n\t\t    <li className=\"nav-item\">\n\t\t      <Link className=\"nav-link\" to=\"/panel\">Panel</Link>\n\t\t    </li>\n\t\t    <li className=\"nav-item\">\n\t\t      <Link className=\"nav-link\" to=\"/lazyLoading\">Lazy Loading</Link>\n\t\t    </li>\n\t\t    <li className=\"nav-item\">\n\t\t      <Link className=\"nav-link\" to=\"/formSubmit\">Form Submit</Link>\n\t\t    </li>  \n\t\t    <li className=\"nav-item\">\n\t\t      <Link className=\"nav-link\" to=\"/hooks\">Hooks</Link>\n\t\t    </li>  \n\t\t     \n\t\t  </ul>\n\t\t</nav>\n\t\t</div>\n\t\t</div>\n\t\t</div>\n \t)\n}\n \nexport default Navbar;","import React, { Component } from 'react';\n\n \nvar  Home= () =>{\n\treturn(\n\t \n\t\t\t   <div className=\"container-fluid\">\n              <div className=\"row\">\n                  <div className=\"col-md-12\"  style={{backgroundColor:\"#19a7a9\",height:\"200px\"}}> </div>\n                      <div className=\"categories col-md-8 offset-md-2\">\n                            <h6 style={{\"padding\": \"24px 0px 4px 0px\"}}>Home</h6> \n                            <hr /> \n                            <div className=\"row\">\n                                <p>Welcome Home !!!</p>\n                            </div>\n                      </div>  \n                </div>\n          </div>\n \t)\n}\n\nexport default Home;","import React, { Component } from 'react';\n \nclass Panel extends Component {\n\n\tcall=(e)=>{\n\n\t\tif(e.target.checked==true){\n\t\t\te.target.parentElement.parentElement.parentElement.style.border = '2px solid #49a8a9';  \n\t\t\te.target.parentElement.parentElement.parentElement.style.boxShadow = '0 0 3px';  \n\t\t}else{\n\t\t\te.target.parentElement.parentElement.parentElement.style.border = null;  \n\t\t\te.target.parentElement.parentElement.parentElement.style.boxShadow = null;  \n\t\t}\n\t};  \n\trender() { \n\treturn(\n\n\t\t<div className=\"container-fluid\">\n              <div className=\"row\">\n                  <div className=\"col-md-12\"  style={{backgroundColor:\"#19a7a9\",height:\"200px\"}}> </div> \n                      <div className=\"categories col-md-8 offset-md-2\">\n                            <h6 style={{\"padding\": \"24px 0px 4px 0px\"}}>Categories</h6>  \n                            <hr /> \n                            <p className=\"greyFont\" style={{fontSize:\"14px\"}}>Select from the action below to enhance the plan</p>\n                            <div className=\"row\">\n\n                                  <div className=\"col-xs-12 col-md-6\" style={{marginBottom:\"2%\"}}>\n                                          <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                      <div className=\"flex-container\">\n                                                            <div className=\"categoriesImg\">   \n                                                                    <img src=\"./im.jpg\" />                                                                                                                      \n                                                            </div> \n                                                            <div>\n                                                                  <p className=\"topic\">Topic 1</p> \n                                                                  <p className=\"tagname\">tag Name 1</p>   \n                                                                  <p className=\"cost greyFont\">Monthly Cost {\"INR 50\"}</p>      \n                                                            </div>\n                                                            <input type=\"checkbox\" className=\"checkbox-custom\" onChange={this.call.bind(this)}/>\n                                                      </div>\n                                                      <div align=\"center\"> \n                                                            <button type=\"button\" className=\"btn btn-details btn-sm\">Details</button>\n                                                            <button type=\"button\" className=\"btn btn-edit btn-sm\">Edit</button> \n                                                      </div>\n                                                </div>\n                                            </div> \n                                      </div>\n\n\n                                    <div className=\"col-xs-12 col-md-6\" style={{marginBottom:\"2%\"}}>\n                                          <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                      <div className=\"flex-container\">\n                                                            <div className=\"categoriesImg\">   \n                                                                    <img src=\"./im.jpg\" />  \n                                                            </div> \n                                                            <div>\n                                                                  <p className=\"topic\">Topic 2</p> \n                                                                  <p className=\"tagname2\">tag Name 1</p>   \n                                                                  <p className=\"cost greyFont\">Monthly Cost {\"INR 50\"}</p>   \n                                                            </div>\n                                                            <input type=\"checkbox\" className=\"checkbox-custom\" onChange={this.call.bind(this)}/>\n                                                      </div>\n                                                      <div align=\"center\"> \n                                                            <button type=\"button\" className=\"btn btn-details btn-sm\">Details</button>\n                                                            <button type=\"button\" className=\"btn btn-edit btn-sm\">Edit</button> \n                                                      </div>\n                                                </div>\n                                            </div>\n                                      </div>\n\n                                  </div>\n                                   <div className=\"row\">\n\n                                  <div className=\"col-xs-12 col-md-6\" style={{marginBottom:\"2%\"}}>\n                                          <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                      <div className=\"flex-container\">\n                                                            <div className=\"categoriesImg\">   \n                                                                    <img src=\"./im.jpg\" />                                                                                                                      \n                                                            </div> \n                                                            <div>\n                                                                  <p className=\"topic\">Topic 2</p> \n                                                                  \n                                                                  <p className=\"cost greyFont\">Monthly Cost {\"INR 50\"}</p>      \n                                                            </div>\n                                                            <input type=\"checkbox\" className=\"checkbox-custom\" onChange={this.call.bind(this)}/>\n                                                      </div>\n                                                      <div align=\"center\"> \n                                                            <button type=\"button\" className=\"btn btn-details btn-sm\">Details</button>\n                                                      </div>\n                                                </div>\n                                            </div> \n                                      </div>\n\n                                    <div className=\"col-xs-12 col-md-6\" style={{marginBottom:\"2%\"}}>\n                                          <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                      <div className=\"flex-container\">\n                                                            <div className=\"categoriesImg\">   \n                                                                    <img src=\"./im.jpg\" />  \n                                                            </div> \n                                                            <div>\n                                                                  <p className=\"topic\">Topic 4</p> \n                                                                  \n                                                                  <p className=\"cost greyFont\">Monthly Cost {\"INR 50\"}</p>   \n                                                            </div>\n                                                            <input type=\"checkbox\" className=\"checkbox-custom\" onChange={this.call.bind(this)}/>\n                                                      </div>\n                                                      <div align=\"center\"> \n                                                            <button type=\"button\" className=\"btn btn-details btn-sm\">Details</button>\n                                                      </div> \n                                                </div>\n                                            </div>\n                                      </div>\n\n                                  </div>\n                        </div>  \n\n\n                 </div>\n                 <div align=\"center\"><button className=\"saveBtn\" type=\"button btn\">Save</button></div>    \n        </div>\n \t);\n }\n}\n\nexport default Panel;","import React, { Component } from 'react';\n\n \nvar  Contact= () =>{ \n  return(\n   \n         <div className=\"container-fluid\">\n              <div className=\"row\">\n                  <div className=\"col-md-12\"  style={{backgroundColor:\"#19a7a9\",height:\"200px\"}}> </div>\n                      <div className=\"categories col-md-8 offset-md-2\">\n                            <h6 style={{\"padding\": \"24px 0px 4px 0px\"}}>Home</h6> \n                            <hr /> \n                            <div className=\"row\">\n                                <p>Welcome Home !!!</p>\n                            </div>\n                      </div>  \n                </div>\n          </div>\n  )\n}\n \nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {  \r\n      constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      title:\"\",\r\n      body:\"\"\r\n    }\r\n    this.setData = this.setData.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n setData(e){\r\n  this.setState({[e.target.name]:e.target.value});\r\n\r\n}\r\nonSubmit(e){\r\n  e.preventDefault();\r\n  const post = {\r\n    title: this.state.title,\r\n    body: this.state.body\r\n  }\r\n  //console.log(post);\r\n  \r\n  fetch('https://jsonplaceholder.typicode.com/posts',{\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(post) \r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>console.log(data));\r\n \r\n\r\n}\r\n      render() {\r\n        return ( \r\n          <div className=\"container-fluid\">\r\n              <h1>Add Post</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                  <label>Title:</label>\r\n                  <br/>\r\n                  <input type=\"text\" name=\"title\" onChange={this.setData} value={this.state.title}/>\r\n                </div>\r\n                <div>\r\n                  <label>Body:</label>\r\n                  <br/>\r\n                  <textarea name=\"body\" onChange={this.setData} value={this.state.body}/>\r\n                </div>\r\n                <br/>\r\n                <button type=\"submit\">Submit</button> \r\n              </form>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Form;\r\n","import React, {useState,useEffect} from 'react';\r\n\r\n\r\nfunction App() {\r\n   const [count, setCount] = useState(0);\r\n   const [count1, setCount1] = useState(50);\r\n   const handleIncrement = () => {\r\n     setCount(count + 1);\r\n   };\r\n   const handleDecrement = () => {\r\n     setCount1(count1 - 1);\r\n   };\r\n   useEffect(() => {\r\n     console.log(\"##########This will trigger when state is get updated,i am passing increment value,so if data is get incremented then useeffect will get called##########\");\r\n   },[count]);\r\n  return (\r\n    <div className=\"App\"><h1 style={{\"color\":\"red\"}}>\"useState\"</h1> \r\n      <h1>Count Up: {count}</h1>\r\n      <button type=\"button\" onClick={handleIncrement}>Increment</button>\r\n       <h1>Count Down: {count1}</h1>\r\n      <button type=\"button\" onClick={handleDecrement}>Decrement</button>\r\n      <hr/>\r\n      <h1>see console to see <span style={{\"color\":\"red\"}}>\"useEffect\"</span></h1> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\nimport Navbar from './component/Navbar'; \nimport Home from './component/Home';\nimport Panel from './component/Panel';\nimport Contact from './component/Contact';\nimport Form from './component/Form';\nimport Hooks from './component/Hooks';\n//import './App.css';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\n\n \n\nclass App extends Component {  \n      constructor(props) {\n    super(props)\n    this.state = {\n      items: [\n        { text: \"Learn JavaScript\", done: false }\n      ], \n      check1:true\n    }\n  }\n\n      render() {\n        return ( \n          <BrowserRouter>\n            <div>\n               <Navbar />\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/panel\" render={() => <Panel txt={this.state.check1}/>}/>\n                <Route exact path=\"/lazyLoading\" component={Contact}/>\n                <Route exact path=\"/formSubmit\" component={Form}/> \n                <Route exact path=\"/hooks\" component={Hooks}/>\n            </div> \n          </BrowserRouter>\n        );\n      }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';  \nimport reducer from './reducer';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}